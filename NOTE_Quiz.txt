Programmers
1. 구현
2. 구현
3. hash
4. hash
5. hash,sort정책사용
6. 우선순위큐 사용법,우선순위큐 정책사용
7. max_element사용 (sort 정책으로 풀어봐라_코드보면 설명있음)
8. 구현
9. 우선순위큐&multimap사용(multimap max min뽑아내기& iterator이해)
10.정렬
11.정렬(string을 정책사용)
12.구현
13.구현
14.DFS
15.구현(Vector Index로 해결)
16.Kruskal 알고리즘
   Greedy를 이용하여 네트워크(가중치를 간선에 할당한 그래프)의 모든 정점을 최소 비용으로 연결하는 최적 해답을 구하는 것
17.구현(X)
18.DFS
19.DFS
20.DFS
21.DFS
22.DP
23.DP(X)
24.string이용(X)
25.string이용
26.BFS
27.STACK
28.구현
29.구현
30.구현
31.구현
32.구현
33.구현(string이용)_Hint
34.좌표사용구현 좌표의 범위를 잘 파악하자
35.구현
36.구현
37.투포인터방식(2개의 idx사용)
38.이분탐색
39.set사용 or 링크트리스트
40.구현
41.map관련 구현
42.2차원누적합(X)
43.블록이동하기(X)
44.이분탐색
45.이분탐색
////////////////////////////////////////////////////////////////////////////////////////////////////
Programmers_R1
★DP
PROG_54_1.가장큰정사각형찾기
PROG_26_1.모범답_정수삼각형
PROG_27_1.등굣길
PROG_54_1.가장큰정사각형찾기

★그래프
PROG_20_1.섬연결하기
PROG_29_1.가장먼노드
PROG_46_1.배달

★안정정렬(Stable Sort)과 불안정정렬(Unstable Sort)
안정정렬(Stable Sort) : 중복된 값을 입력 순서와 동일하게 정렬하는 정렬
삽입정렬,병합정렬,버블정렬
불안정정렬(Unstable Sort) :중복된 값이 입력 순서와 동일하지 않게 정렬
퀵정렬,선택정렬,계수정렬
////////////////////////////////////////////////////////////////////////////////////////////////////
3차 시도공부
BOJ25 벽부수고이동하기,BOJ28 말이되고픈원숭이 유형을 잘 익히자

DP공부
BOJ26,27

////////////////////////////////////////////////////////////////////////////////////////////////////
H-Index : 문제이해어려움
카펫
조이스틱 : 전설의 문제같음 
           답이 없는건 아님
           https://4z7l.github.io/2021/03/12/algorithms-prg-42860.html
           그런데 dfs로는 구현이 어렵고 그리디로 풀려니깐 도저히 안풀림
           인터넷에 있는 다른 풀이도 다 틀림

